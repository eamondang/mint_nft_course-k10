import Head from "next/head";
import { useEffect, useState } from "react";
import { Contract } from "../near-interface";
import { Wallet } from "../near-wallet";
import styles from "../styles/Home.module.css";

const CONTRACT_ID = "dev-1672666255549-42728942536096";

export default function Home() {
  const [useWeb3, setUseweb3] = useState({});
  const [allTokens, setAlltokens] = useState([]);

  useEffect(() => {
    const data = async () => {
      const wallet = await new Wallet({ createAccessKeyFor: CONTRACT_ID });
      const contract = await new Contract({
        contractId: CONTRACT_ID,
        walletToUse: wallet,
      });
      const isSignedIn = await wallet.startUp();
      const tokens = await contract.get_all_tokens();

      setUseweb3({
        wallet,
        contract,
        isSignedIn,
        tokens,
      });
    };

    data();
  }, []);

  function mint_nft() {
    e.preventDefault();
    const token_owner_id = document.getElementById("token_owner_id").value;
    const token_name = document.getElementById("token_name").value;
    const description = document.getElementById("description").value;
    const media_uri = document.getElementById("media_uri").value;
    const level = document.getElementById("level").value;
    useWeb3.contract.mint_nft({
      token_owner_id,
      token_name,
      description,
      media_uri,
      level,
    });
  }

  console.log("use web3", useWeb3.contract);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>
            Get started by editing&nbsp;
            <code className={styles.code}>pages/index.js</code>
          </p>
          {useWeb3.isSignedIn ? (
            <button>{useWeb3.wallet.accountId}</button>
          ) : (
            <button onClick={() => useWeb3.wallet.signIn()}>
              Connect Wallet
            </button>
          )}
          <button onClick={() => useWeb3.wallet.signOut()}>Sign Out</button>
        </div>
        <div>
          {useWeb3.isSignedIn
            ? useWeb3.tokens.map((token) => (
                <>
                  <p>{token.owner_id}</p>
                  <img src={`${token.media_uri}`} />
                </>
              ))
            : ""}
        </div>
        <form></form>
      </main>
    </>
  );
}
